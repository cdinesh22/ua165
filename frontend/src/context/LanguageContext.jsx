import { createContext, useContext, useEffect, useMemo, useState } from 'react'

const LanguageContext = createContext()

const translations = {
  en: {
    app_name: 'TCM',
    app_tagline: 'Temple Crowd Management',
    nav_home: 'Home',
    nav_dashboard: 'User Dashboard',
    nav_simulation: 'Simulation',
    nav_live: 'Explore Live',
    nav_contact: 'Contact',
    nav_admin: 'Admin',
    hero_title: 'Temple & Pilgrimage Crowd Management',
    hero_sub: 'Plan your darshan, book slots, and view live crowd updates for Somnath, Dwarka, Ambaji, and Pavagadh.',
    hero_btn_book: 'Book Darshan Slot',
    live_widget_title: 'Live Realtime Updates',
    live_widget_sub: 'Official timings, current crowd and slot availability',
    explore_live: 'Explore Live',
    gujarat_temples: 'Gujarat Temples',
    other_temples: 'Other Major Temples in India',
    search_temples: 'Search temples...',
    search: 'Search',
    feat_pilgrims_title: 'Features for Pilgrims',
    feat_pilgrims_item1: 'Registration & Login',
    feat_pilgrims_item2: 'Darshan Slot Booking with QR Pass',
    feat_pilgrims_item3: 'Live Crowd Density & Route Planner',
    feat_pilgrims_item4: 'Simulation: Parking, Temple & Crowd Levels',
    feat_pilgrims_item5: 'Live Explore (Realtime Map & Status)',
    feat_pilgrims_item6: 'Navigation Assistance (Route & Facilities)',
    feat_pilgrims_item7: 'Waiting Times & Queue Information',
    feat_admin_title: 'Features for Admin',
    feat_admin_item1: 'Slot & Capacity Management',
    feat_admin_item2: 'Crowd Simulation & Emergency Alerts',
    feat_admin_item3: 'Analytics & Reports',
    // Contact & Help
    contact_title: 'Contact & Help',
    faqs: 'FAQs',
    faq_q1: 'How to book a slot?',
    faq_a1: 'Login and go to the dashboard to book available slots.',
    faq_q2: 'What is Emergency Mode?',
    faq_a2: 'Admin can trigger alerts visible across the app.',
    emergency_helplines: 'Emergency Helplines',
    medical_emergency: 'Medical Emergency',
    police: 'Police',
    temple_security: 'Temple Security',
    // Assistant
    assistant_title: 'Assistant',
    assistant_greeting: 'Namaste! I am your assistant. Ask about timings, location, rules, or facilities. ЁЯЩП',
    assistant_quick_1: 'What are the timings?',
    assistant_quick_2: 'Where is it located?',
    assistant_quick_3: 'What are the rules?',
    assistant_quick_4: 'What facilities are available?',
    assistant_input_placeholder: 'Ask about timings, rules, location...'
    ,assistant_send: 'Send'
    ,assistant_sending: '...'
  },
  hi: {
    app_name: 'рдЯреАрд╕реАрдПрдо',
    app_tagline: 'рдордВрджрд┐рд░ рднреАрдбрд╝ рдкреНрд░рдмрдВрдзрди',
    nav_home: 'рд╣реЛрдо',
    nav_dashboard: 'рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдбреИрд╢рдмреЛрд░реНрдб',
    nav_simulation: 'рд╕рд┐рдореБрд▓реЗрд╢рди',
    nav_live: 'рд▓рд╛рдЗрд╡ рджреЗрдЦреЗрдВ',
    nav_contact: 'рд╕рдВрдкрд░реНрдХ',
    nav_admin: 'рдПрдбрдорд┐рди',
    hero_title: 'рдордВрджрд┐рд░ рдФрд░ рддреАрд░реНрдердпрд╛рддреНрд░рд╛ рднреАрдбрд╝ рдкреНрд░рдмрдВрдзрди',
    hero_sub: 'рдЕрдкрдиреЗ рджрд░реНрд╢рди рдХреА рдпреЛрдЬрдирд╛ рдмрдирд╛рдПрдВ, рд╕реНрд▓реЙрдЯ рдмреБрдХ рдХрд░реЗрдВ, рдФрд░ рд╕реЛрдордирд╛рде, рджреНрд╡рд╛рд░рдХрд╛, рдЕрдВрдмрд╛рдЬреА рдФрд░ рдкрд╛рд╡рд╛рдЧрдврд╝ рдХреЗ рд▓рд╛рдЗрд╡ рднреАрдбрд╝ рдЕрдкрдбреЗрдЯ рджреЗрдЦреЗрдВред',
    hero_btn_book: 'рджрд░реНрд╢рди рд╕реНрд▓реЙрдЯ рдмреБрдХ рдХрд░реЗрдВ',
    live_widget_title: 'рд▓рд╛рдЗрд╡ рд░рд┐рдпрд▓рдЯрд╛рдЗрдо рдЕрдкрдбреЗрдЯ',
    live_widget_sub: 'рдЖрдзрд┐рдХрд╛рд░рд┐рдХ рд╕рдордп, рд╡рд░реНрддрдорд╛рди рднреАрдбрд╝ рдФрд░ рд╕реНрд▓реЙрдЯ рдЙрдкрд▓рдмреНрдзрддрд╛',
    explore_live: 'рд▓рд╛рдЗрд╡ рджреЗрдЦреЗрдВ',
    gujarat_temples: 'рдЧреБрдЬрд░рд╛рдд рдХреЗ рдордВрджрд┐рд░',
    other_temples: 'рднрд╛рд░рдд рдХреЗ рдЕрдиреНрдп рдкреНрд░рдореБрдЦ рдордВрджрд┐рд░',
    search_temples: 'рдордВрджрд┐рд░ рдЦреЛрдЬреЗрдВ...',
    search: 'рдЦреЛрдЬреЗрдВ',
    feat_pilgrims_title: 'рддреАрд░реНрдердпрд╛рддреНрд░рд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рд╕реБрд╡рд┐рдзрд╛рдПрдБ',
    feat_pilgrims_item1: 'рдкрдВрдЬреАрдХрд░рдг рдФрд░ рд▓реЙрдЧрд┐рди',
    feat_pilgrims_item2: 'рдХреНрдпреВрдЖрд░ рдкрд╛рд╕ рдХреЗ рд╕рд╛рде рджрд░реНрд╢рди рд╕реНрд▓реЙрдЯ рдмреБрдХрд┐рдВрдЧ',
    feat_pilgrims_item3: 'рд▓рд╛рдЗрд╡ рднреАрдбрд╝ рдШрдирддреНрд╡ рдФрд░ рд░реВрдЯ рдкреНрд▓рд╛рдирд░',
    feat_admin_title: 'рдкреНрд░рд╢рд╛рд╕рдХ рдХреЗ рд▓рд┐рдП рд╕реБрд╡рд┐рдзрд╛рдПрдБ',
    feat_admin_item1: 'рд╕реНрд▓реЙрдЯ рдФрд░ рдХреНрд╖рдорддрд╛ рдкреНрд░рдмрдВрдзрди',
    feat_admin_item2: 'рднреАрдбрд╝ рд╕рд┐рдореБрд▓реЗрд╢рди рдФрд░ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдЕрд▓рд░реНрдЯ',
    feat_admin_item3: 'рдПрдирд╛рд▓рд┐рдЯрд┐рдХреНрд╕ рдФрд░ рд░рд┐рдкреЛрд░реНрдЯ',
    // Contact & Help
    contact_title: 'рд╕рдВрдкрд░реНрдХ рдФрд░ рд╕рд╣рд╛рдпрддрд╛',
    faqs: 'рд╕рд╛рдорд╛рдиреНрдп рдкреНрд░рд╢реНрди',
    faq_q1: 'рд╕реНрд▓реЙрдЯ рдХреИрд╕реЗ рдмреБрдХ рдХрд░реЗрдВ?',
    faq_a1: 'рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ рдФрд░ рдбреИрд╢рдмреЛрд░реНрдб рдореЗрдВ рдЬрд╛рдХрд░ рдЙрдкрд▓рдмреНрдз рд╕реНрд▓реЙрдЯ рдмреБрдХ рдХрд░реЗрдВред',
    faq_q2: 'рдЗрдорд░рдЬреЗрдВрд╕реА рдореЛрдб рдХреНрдпрд╛ рд╣реИ?',
    faq_a2: 'рдПрдбрдорд┐рди рдРрдк рднрд░ рдореЗрдВ рджрд┐рдЦрдиреЗ рд╡рд╛рд▓реЗ рдЕрд▓рд░реНрдЯ рдЯреНрд░рд┐рдЧрд░ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред',
    emergency_helplines: 'рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди',
    medical_emergency: 'рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЖрдкрд╛рддрдХрд╛рд▓',
    police: 'рдкреБрд▓рд┐рд╕',
    temple_security: 'рдордВрджрд┐рд░ рд╕реБрд░рдХреНрд╖рд╛',
    // Assistant
    assistant_title: 'рд╕рд╣рд╛рдпрдХ',
    assistant_greeting: 'рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ рд╕рд╣рд╛рдпрдХ рд╣реВрдБред рд╕рдордп, рд╕реНрдерд╛рди, рдирд┐рдпрдо рдпрд╛ рд╕реБрд╡рд┐рдзрд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВред ЁЯЩП',
    assistant_quick_1: 'рд╕рдордп рдХреНрдпрд╛ рд╣реИрдВ?',
    assistant_quick_2: 'рдпрд╣ рдХрд╣рд╛рдБ рд╕реНрдерд┐рдд рд╣реИ?',
    assistant_quick_3: 'рдирд┐рдпрдо рдХреНрдпрд╛ рд╣реИрдВ?',
    assistant_quick_4: 'рдХреМрди-рд╕реА рд╕реБрд╡рд┐рдзрд╛рдПрдБ рдЙрдкрд▓рдмреНрдз рд╣реИрдВ?',
    assistant_input_placeholder: 'рд╕рдордп, рдирд┐рдпрдо, рд╕реНрдерд╛рди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ...'
    ,assistant_send: 'рднреЗрдЬреЗрдВ'
    ,assistant_sending: '...'
  },
  gu: {
    app_name: 'ркЯрлАрк╕рлАркПрко',
    app_tagline: 'ркоркВркжрк┐рк░ ркнрлАркб рк╡рлНркпрк╡рк╕рлНркерк╛рккрки',
    nav_home: 'рк╣рлЛрко',
    nav_dashboard: 'ркпрлБркЭрк░ ркбрлЗрк╢ркмрлЛрк░рлНркб',
    nav_simulation: 'рк╕рк┐ркорлНркпрлБрк▓рлЗрк╢рки',
    nav_live: 'рк▓рк╛ркЗрк╡ ркЬрлБркУ',
    nav_contact: 'рк╕ркВрккрк░рлНркХ',
    nav_admin: 'ркПркбркорк┐рки',
    hero_title: 'ркоркВркжрк┐рк░ ркЕркирлЗ ркдрлАрк░рлНркеркпрк╛ркдрлНрк░рк╛ ркнрлАркб рк╡рлНркпрк╡рк╕рлНркерк╛рккрки',
    hero_sub: 'ркдркорк╛рк░рк╛ ркжрк░рлНрк╢ркиркирлА ркпрлЛркЬркирк╛ ркмркирк╛рк╡рлЛ, рк╕рлНрк▓рлЛркЯ ркмрлБркХ ркХрк░рлЛ, ркЕркирлЗ рк╕рлЛркоркирк╛рке, ркжрлНрк╡рк╛рк░ркХрк╛, ркЕркВркмрк╛ркЬрлА ркЕркирлЗ рккрк╛рк╡рк╛ркЧрквркирк╛ рк▓рк╛ркЗрк╡ ркнрлАркб ркЕрккркбрлЗркЯ ркЬрлБркУ.',
    hero_btn_book: 'ркжрк░рлНрк╢рки рк╕рлНрк▓рлЛркЯ ркмрлБркХ ркХрк░рлЛ',
    live_widget_title: 'рк▓рк╛ркЗрк╡ рк░рк┐ркпрк▓ркЯрк╛ркЗрко ркЕрккркбрлЗркЯ',
    live_widget_sub: 'рк╕ркдрлНркдрк╛рк╡рк╛рк░ рк╕ркоркп, рк╡рк░рлНркдркорк╛рки ркнрлАркб ркЕркирлЗ рк╕рлНрк▓рлЛркЯ ркЙрккрк▓ркмрлНркзркдрк╛',
    explore_live: 'рк▓рк╛ркЗрк╡ ркЬрлБркУ',
    gujarat_temples: 'ркЧрлБркЬрк░рк╛ркдркирк╛ ркоркВркжрк┐рк░',
    other_temples: 'ркнрк╛рк░ркдркирк╛ ркЕркирлНркп ркорлБркЦрлНркп ркоркВркжрк┐рк░',
    search_temples: 'ркоркВркжрк┐рк░ рк╢рлЛркзрлЛ...',
    search: 'рк╢рлЛркзрлЛ',
    feat_pilgrims_title: 'ркпрк╛ркдрлНрк░рк┐ркХрлЛ ркорк╛ркЯрлЗркирлА рк╕рлБрк╡рк┐ркзрк╛ркУ',
    feat_pilgrims_item1: 'рк░ркЬрлАрк╕рлНркЯрлНрк░рлЗрк╢рки ркЕркирлЗ рк▓рлЛркЧрк┐рки',
    feat_pilgrims_item2: 'ркХрлНркпрлБркЖрк░ рккрк╛рк╕ рк╕рк╛ркерлЗ ркжрк░рлНрк╢рки рк╕рлНрк▓рлЛркЯ ркмрлБркХрк┐ркВркЧ',
    feat_pilgrims_item3: 'рк▓рк╛ркЗрк╡ ркнрлАркб ркШркиркдрлНрк╡ ркЕркирлЗ рк░рлВркЯ рккрлНрк▓рк╛ркирк░',
    feat_admin_title: 'ркПркбркорк┐рки ркорк╛ркЯрлЗркирлА рк╕рлБрк╡рк┐ркзрк╛ркУ',
    feat_admin_item1: 'рк╕рлНрк▓рлЛркЯ ркЕркирлЗ ркХрлНрк╖ркоркдрк╛ ркорлЗркирлЗркЬркорлЗркирлНркЯ',
    feat_admin_item2: 'ркнрлАркб рк╕рк┐ркорлНркпрлБрк▓рлЗрк╢рки ркЕркирлЗ ркЗркорк░ркЬркирлНрк╕рлА ркПрк▓рк░рлНркЯ',
    feat_admin_item3: 'ркПркирк╛рк▓рк┐ркЯрк┐ркХрлНрк╕ ркЕркирлЗ рк░рк┐рккрлЛрк░рлНркЯрлНрк╕',
    // Assistant
    assistant_title: 'рк╕рк╣рк╛ркпркХ',
    assistant_greeting: 'ркиркорк╕рлНркдрлЗ! рк╣рлБркВ ркдркорк╛рк░рлЛ рк╕рк╣рк╛ркпркХ ркЫрлБркВ. рк╕ркоркп, рк╕рлНркерк╛рки, ркирк┐ркпркорлЛ ркЕркерк╡рк╛ рк╕рлБрк╡рк┐ркзрк╛ркУ рк╡рк┐рк╢рлЗ рккрлВркЫрлЛ. ЁЯЩП',
    assistant_quick_1: 'рк╕ркоркп рк╢рлБркВ ркЫрлЗ?',
    assistant_quick_2: 'ркЖ ркХрлНркпрк╛ркВ ркЖрк╡рлЗрк▓рлБркВ ркЫрлЗ?',
    assistant_quick_3: 'ркирк┐ркпркорлЛ рк╢рлБркВ ркЫрлЗ?',
    assistant_quick_4: 'ркХркИ рк╕рлБрк╡рк┐ркзрк╛ркУ ркЙрккрк▓ркмрлНркз ркЫрлЗ?',
    assistant_input_placeholder: 'рк╕ркоркп, ркирк┐ркпркорлЛ, рк╕рлНркерк╛рки рк╡рк┐рк╢рлЗ рккрлВркЫрлЛ...'
    ,assistant_send: 'ркорлЛркХрк▓рлЛ'
    ,assistant_sending: '...'
  }
}

// Extend with additional Indian languages using English placeholders initially.
// Keys mirror the English dictionary to ensure full coverage across the UI.
const extraLangTemplate = {
  app_name: 'TCM',
  app_tagline: 'Temple Crowd Management',
  nav_home: 'Home',
  nav_dashboard: 'User Dashboard',
  nav_simulation: 'Simulation',
  nav_live: 'Explore Live',
  nav_contact: 'Contact',
  nav_admin: 'Admin',
  hero_title: 'Temple & Pilgrimage Crowd Management',
  hero_sub: 'Plan your darshan, book slots, and view live crowd updates for Somnath, Dwarka, Ambaji, and Pavagadh.',
  hero_btn_book: 'Book Darshan Slot',
  live_widget_title: 'Live Realtime Updates',
  live_widget_sub: 'Official timings, current crowd and slot availability',
  explore_live: 'Explore Live',
  gujarat_temples: 'Gujarat Temples',
  other_temples: 'Other Major Temples in India',
  search_temples: 'Search temples...',
  search: 'Search',
  feat_pilgrims_title: 'Features for Pilgrims',
  feat_pilgrims_item1: 'Registration & Login',
  feat_pilgrims_item2: 'Darshan Slot Booking with QR Pass',
  feat_pilgrims_item3: 'Live Crowd Density & Route Planner',
  feat_pilgrims_item4: 'Simulation: Parking, Temple & Crowd Levels',
  feat_pilgrims_item5: 'Live Explore (Realtime Map & Status)',
  feat_pilgrims_item6: 'Navigation Assistance (Route & Facilities)',
  feat_pilgrims_item7: 'Waiting Times & Queue Information',
  feat_admin_title: 'Features for Admin',
  feat_admin_item1: 'Slot & Capacity Management',
  feat_admin_item2: 'Crowd Simulation & Emergency Alerts',
  feat_admin_item3: 'Analytics & Reports',
  // Contact & Help
  contact_title: 'Contact & Help',
  faqs: 'FAQs',
  faq_q1: 'How to book a slot?',
  faq_a1: 'Login and go to the dashboard to book available slots.',
  faq_q2: 'What is Emergency Mode?',
  faq_a2: 'Admin can trigger alerts visible across the app.',
  emergency_helplines: 'Emergency Helplines',
  medical_emergency: 'Medical Emergency',
  police: 'Police',
  temple_security: 'Temple Security',
  // Assistant (defaults for extra languages)
  assistant_title: 'Assistant',
  assistant_greeting: 'Namaste! I am your assistant. Ask about timings, location, rules, or facilities. ЁЯЩП',
  assistant_quick_1: 'What are the timings?',
  assistant_quick_2: 'Where is it located?',
  assistant_quick_3: 'What are the rules?',
  assistant_quick_4: 'What facilities are available?',
  assistant_input_placeholder: 'Ask about timings, rules, location...'
  ,assistant_send: 'Send'
  ,assistant_sending: '...'
}

translations.as = { ...extraLangTemplate } // Assamese
translations.bn = { ...extraLangTemplate } // Bengali
translations.kn = { ...extraLangTemplate } // Kannada
translations.ks = { ...extraLangTemplate } // Kashmiri
translations.ml = { ...extraLangTemplate } // Malayalam
translations.mni = { ...extraLangTemplate } // Manipuri (Meitei)
translations.mr = { ...extraLangTemplate } // Marathi
translations.ne = { ...extraLangTemplate } // Nepali
translations.or = { ...extraLangTemplate } // Odia
translations.pa = { ...extraLangTemplate } // Punjabi
translations.ta = { ...extraLangTemplate } // Tamil
translations.te = { ...extraLangTemplate } // Telugu

export function LanguageProvider({ children }) {
  const [lang, setLang] = useState(() => localStorage.getItem('tcm_lang') || 'en')

  useEffect(() => {
    localStorage.setItem('tcm_lang', lang)
    document.documentElement.lang = lang
  }, [lang])

  const t = useMemo(() => {
    const dict = translations[lang] || translations.en
    return (key) => dict[key] || translations.en[key] || key
  }, [lang])

  const value = useMemo(() => ({ lang, setLang, t }), [lang, t])
  return <LanguageContext.Provider value={value}>{children}</LanguageContext.Provider>
}

export function useLang() {
  return useContext(LanguageContext)
}
